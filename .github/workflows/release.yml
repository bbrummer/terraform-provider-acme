# This GitHub action can publish assets for release when a tag is created.
# Currently its setup to run on any tag that matches the pattern "v*" (ie. v0.1.0).
#
# This uses an action (crazy-max/ghaction-import-gpg) that assumes you set your
# private key in the `GPG_PRIVATE_KEY` secret and passphrase in the `PASSPHRASE`
# secret. If you would rather own your own GPG handling, please fork this action
# or use an alternative one for key handling.
#
# You will need to pass the `--batch` flag to `gpg` in your signing step 
# in `goreleaser` to indicate this is being used in a non-interactive mode.
#
name: release
on:
  push:
    tags:
      - 'v*'
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-go@v5
        with:
          go-version: '^1.17.5'
          check-latest: true
      - name: Run Tests
        run: make tools pebble-start memcached-start test
        env:
          ACME_ENABLE_MEMCACHE_TEST: yes

  goreleaser:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Delete unneeded software
        run: |
          echo "Free disk space before removing:"
          df -h
          echo ""
          echo "Removing dotnet, android, GHC and CodeQL..."
          echo "  > sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL"
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL
          echo "Removing all docker images..."
          echo "  > sudo docker image prune --all --force"
          sudo docker image prune --all --force
          echo ""
          echo "Free disk space after removing:"
          df -h
      - uses: actions/checkout@v5
      - uses: actions/setup-go@v5
        with:
          go-version: '^1.17.5'
          check-latest: true
      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v6.3.0
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6.4.0
        with:
          version: latest
          args: release --clean --timeout 60m0s
        env:
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
